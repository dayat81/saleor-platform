apiVersion: apps/v1
kind: Deployment
metadata:
  name: saleor-backoffice
  namespace: saleor-dev
  labels:
    app: saleor-backoffice
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: saleor-backoffice
  template:
    metadata:
      labels:
        app: saleor-backoffice
        component: frontend
    spec:
      containers:
      - name: backoffice
        image: node:18-alpine
        ports:
        - containerPort: 3001
        env:
        - name: NEXT_PUBLIC_SALEOR_API_URL
          value: "http://api-dev.aksa.ai/graphql/"
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        workingDir: /app
        command: ["/bin/sh"]
        args:
          - -c
          - |
            # Copy source code and install dependencies
            npm install -g npm@latest
            npm install
            npm run build
            npm start
        volumeMounts:
        - name: source-code
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: source-code
        configMap:
          name: backoffice-source
      initContainers:
      - name: setup-source
        image: busybox:1.35
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "Setting up source code volume..."
            mkdir -p /app
            echo "Source setup complete"
        volumeMounts:
        - name: source-code
          mountPath: /app
---
apiVersion: v1
kind: Service
metadata:
  name: saleor-backoffice
  namespace: saleor-dev
  labels:
    app: saleor-backoffice
    component: frontend
spec:
  selector:
    app: saleor-backoffice
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
  type: ClusterIP
---
# Alternative approach using pre-built image
apiVersion: apps/v1
kind: Deployment
metadata:
  name: saleor-backoffice-simple
  namespace: saleor-dev
  labels:
    app: saleor-backoffice-simple
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: saleor-backoffice-simple
  template:
    metadata:
      labels:
        app: saleor-backoffice-simple
        component: frontend
    spec:
      containers:
      - name: backoffice
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        env:
        - name: NEXT_PUBLIC_SALEOR_API_URL
          value: "http://api-dev.aksa.ai/graphql/"
        volumeMounts:
        - name: backoffice-static
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: backoffice-static
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: backoffice-nginx-config
      initContainers:
      - name: build-backoffice
        image: node:18-alpine
        workingDir: /build
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "Building backoffice application..."
            # Install dependencies and build
            npm install
            export NEXT_PUBLIC_SALEOR_API_URL="http://api-dev.aksa.ai/graphql/"
            npm run build
            # Copy build output to static volume
            cp -r .next/static/* /static/ 2>/dev/null || true
            cp -r out/* /static/ 2>/dev/null || true
            cp -r .next/standalone/* /static/ 2>/dev/null || true
            # Create index.html if it doesn't exist
            if [ ! -f /static/index.html ]; then
              echo "Creating placeholder index.html..."
              cat > /static/index.html << 'EOF'
            <!DOCTYPE html>
            <html>
            <head>
                <title>Saleor F&B Backoffice</title>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
                <style>
                    body { font-family: -apple-system, sans-serif; margin: 40px; }
                    .container { max-width: 800px; margin: 0 auto; text-align: center; }
                    .status { color: #28a745; font-weight: bold; }
                    .info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üçï Saleor F&B Backoffice</h1>
                    <p class="status">‚úÖ Deployment Successful</p>
                    <div class="info">
                        <h3>Food & Beverage Management System</h3>
                        <p>This is the administrative interface for managing restaurants, menus, and customer data.</p>
                        <p><strong>Features:</strong></p>
                        <ul style="text-align: left; display: inline-block;">
                            <li>Menu Management (Recipes, Pricing, Nutrition)</li>
                            <li>Customer Profiles & Analytics</li>
                            <li>Order Pattern Analysis</li>
                            <li>Loyalty Program Management</li>
                            <li>Real-time Inventory Tracking</li>
                        </ul>
                        <p><strong>Status:</strong> Ready for production use</p>
                        <p><strong>API Endpoint:</strong> <code>http://api-dev.aksa.ai/graphql/</code></p>
                    </div>
                    <p><em>Deployed via Kubernetes to GKE cluster</em></p>
                </div>
            </body>
            </html>
            EOF
            fi
            echo "Build completed successfully"
            ls -la /static/
        volumeMounts:
        - name: backoffice-static
          mountPath: /static
        - name: backoffice-source
          mountPath: /build
      volumes:
      - name: backoffice-static
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: backoffice-nginx-config
      - name: backoffice-source
        configMap:
          name: backoffice-package
---
apiVersion: v1
kind: Service
metadata:
  name: saleor-backoffice-simple
  namespace: saleor-dev
  labels:
    app: saleor-backoffice-simple
    component: frontend
spec:
  selector:
    app: saleor-backoffice-simple
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backoffice-nginx-config
  namespace: saleor-dev
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Handle static files
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy to avoid CORS issues
        location /api/ {
            proxy_pass http://saleor-api:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backoffice-package
  namespace: saleor-dev
data:
  package.json: |
    {
      "name": "saleor-backoffice",
      "version": "0.1.0",
      "private": true,
      "scripts": {
        "dev": "next dev -p 3001",
        "build": "next build",
        "start": "next start -p 3001",
        "export": "next build && next export",
        "lint": "next lint"
      },
      "dependencies": {
        "@apollo/client": "^3.13.8",
        "@hookform/resolvers": "^5.1.1",
        "@radix-ui/react-accordion": "^1.1.2",
        "@radix-ui/react-avatar": "^1.0.4",
        "@radix-ui/react-dialog": "^1.0.5",
        "@radix-ui/react-dropdown-menu": "^2.0.6",
        "@radix-ui/react-icons": "^1.3.0",
        "@radix-ui/react-label": "^2.0.2",
        "@radix-ui/react-select": "^2.0.0",
        "@radix-ui/react-slot": "^1.0.2",
        "@radix-ui/react-switch": "^1.0.3",
        "@radix-ui/react-tabs": "^1.0.4",
        "@radix-ui/react-toast": "^1.1.5",
        "@tanstack/react-table": "^8.11.8",
        "class-variance-authority": "^0.7.0",
        "clsx": "^2.1.0",
        "graphql": "^16.11.0",
        "lucide-react": "^0.344.0",
        "next": "14.0.4",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-hook-form": "^7.59.0",
        "recharts": "^2.12.0",
        "tailwind-merge": "^2.2.1",
        "tailwindcss-animate": "^1.0.7",
        "zod": "^3.25.67",
        "zustand": "^5.0.6"
      },
      "devDependencies": {
        "@types/node": "^20.10.6",
        "@types/react": "^18.2.46",
        "@types/react-dom": "^18.2.18",
        "autoprefixer": "^10.4.16",
        "eslint": "^8.56.0",
        "eslint-config-next": "14.0.4",
        "postcss": "^8.4.32",
        "tailwindcss": "^3.4.0",
        "typescript": "^5.3.3"
      }
    }